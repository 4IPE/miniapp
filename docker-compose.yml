services:
  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  api:
    build: backend
    image: api-img
    container_name: api_service
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      WG_URL_NL: ${WG_URL_NL}
      WG_PASSWORD_NL: ${WG_PASSWORD_NL}
      WG_URL_SW: ${WG_URL_SW}
      WG_PASSWORD_SW: ${WG_PASSWORD_SW}
    ports:
      - "9090:9090"
    depends_on:
      - db
    networks:
      - app_network

  bot:
    build: bot
    image: bot-img
    container_name: bot
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - app_network

  frontend:
    build: app-ui
    image: ui-img
    container_name: ui
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - app_network

  client:
    build: client
    image: client-img
    container_name: client-con
    ports:
      - "8080:8080"
    depends_on:
      - api
      - frontend
    networks:
      - app_network
    restart: "on-failure"

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
